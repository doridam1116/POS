<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCAAzAGQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+YeiivQfCfwy8UeL4Pt1jDb2WmEyrHqWpSvBb3EkMkcckVrHD
        FcXU5BdwJ1txZ+Zb3EDXS3ERir6jI+H874mx8Mr4fyrG5vmE4SqrC4GhOvUjRg4xnXq8q5aNCEpwjOvV
        lClCU4RlNOcU/nOIOJMh4Vy6eb8SZvgMly2nUjSeLzDEU8PSlWqKUqdClztSr4ipGE5U6FGNStOMJyjB
        qEmvPqK+l0/Z4QrPv8YurLZ3z2wTw4HWbUI7K4k0y1nY69Gbezu9RW1tb6+jS6n06ymuL+307VJ7aPTb
        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
        UAFFFFABRRRQAUUUUAf/2Q==
</value>
  </data>
</root>